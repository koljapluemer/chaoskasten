# Generated by Django 2.2.7 on 2021-02-22 17:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pinnedNotesPageNr', models.IntegerField(default=1)),
                ('recentNotesPageNr', models.IntegerField(default=1)),
                ('allNotesPageNr', models.IntegerField(default=1)),
                ('searchTerm', models.TextField(blank='true', null='true')),
                ('sidebarCollapsed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Drawer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripeID', models.TextField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank='true', null='true')),
                ('drawer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Drawer')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Profile')),
                ('reference', models.ManyToManyField(related_name='_note_reference_+', to='main.Note')),
            ],
        ),
        migrations.AddField(
            model_name='drawer',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Profile'),
        ),
        migrations.CreateModel(
            name='CollectionHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addedAt', models.DateTimeField(auto_now_add=True)),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Collection')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Note')),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='noteConnectionSender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Note'),
        ),
        migrations.AddField(
            model_name='collection',
            name='openDrawer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Drawer'),
        ),
        migrations.AddField(
            model_name='collection',
            name='openNotes',
            field=models.ManyToManyField(blank=True, related_name='openNotes', to='main.Note'),
        ),
        migrations.AddField(
            model_name='collection',
            name='pinnedNotes',
            field=models.ManyToManyField(blank=True, related_name='pinnedNotes', to='main.Note'),
        ),
        migrations.AddField(
            model_name='collection',
            name='profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.Profile'),
        ),
        migrations.AddField(
            model_name='collection',
            name='recentNotes',
            field=models.ManyToManyField(blank=True, related_name='recentNotes', through='main.CollectionHistory', to='main.Note'),
        ),
    ]
